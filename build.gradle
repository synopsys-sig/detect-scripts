buildscript {
    apply from: 'https://raw.githubusercontent.com/blackducksoftware/integration-resources/master/gradle_common/buildscript-repositories.gradle', to: buildscript
    apply from: 'https://raw.githubusercontent.com/blackducksoftware/integration-resources/master/gradle_common/buildscript-cgp-version.gradle'

    ext {
        javaTargetCompatibility = 8
        javaSourceCompatibility = 8
    }

    dependencies {
        classpath "com.blackduck.integration:common-gradle-plugin:${managedCgpVersion}"
        classpath 'com.blackduck.integration:integration-rest:11.0.0'
        classpath 'org.codehaus.groovy:groovy-all:2.4.12'
        classpath 'org.junit.jupiter:junit-jupiter:5.4.2'
        classpath 'org.mockito:mockito-core:2.+'
    }
}

plugins {
    id 'com.github.johnrengelman.shadow' version '5.0.0'
}

def internalRepoBaseUrl = System.getenv('INTERNAL_REPO_BASE_URL')

apply from: 'https://raw.githubusercontent.com/blackducksoftware/integration-resources/master/gradle_common/buildscript-repositories.gradle'

repositories {
    maven { url "${internalRepoBaseUrl}/artifactory/jcenter" }
}

group = 'com.blackduck.integration'
version = '3.5.0-SNAPSHOT'

apply plugin: 'com.blackduck.integration.simple'

jar {
    manifest {
        attributes 'Main-Class': 'com.blackduck.integration.detect.scripts.Application'
    }
}

shadowJar {
    getArchiveBaseName().set('detect-scripts')
    classifier = null
}

jar.finalizedBy shadowJar

build.dependsOn.add("generateVersionFile")
build.dependsOn.add("generateScripts")

task generateVersionFile {
    final File versionFile = new File(project.projectDir, "src/main/resources/version.txt")
    versionFile.delete()
    versionFile << version
}

task generateScripts(type: JavaExec) {
    main = "-jar"
    args(jar.getArchiveFile().get().asFile, "scripts", "${project.buildDir}/libs/")
}

dependencies {
    implementation 'com.blackduck.integration:blackduck-common:67.0.17'
    implementation 'org.freemarker:freemarker:2.3.31'
}
